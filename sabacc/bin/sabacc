#!/usr/bin/env python

# Sabacc -- an interesting card game similar to Blackjack.
# Copyright (C) 2007-2008 Joel Cross.
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.

"""
Sabacc caller script (taken from version 0.6beta1)
This is the application caller, that imports all packages
and loads the initial window.
"""

import sys
import os.path

def main():
	PYTHON_VERSION = sys.version_info[:2]

	# Some version dependencies.
	PYTHON_REQUIRED = (2, 5)
	PYGTK_REQUIRED = '2.0'
	PYXML_REQUIRED = '0.8.4'

	# Check version requirements.

	if PYTHON_VERSION < PYTHON_REQUIRED:
		sys.stderr.write("python\n")
		raise SystemExit, "Error: Python %d.%d+ required" % PYTHON_REQUIRED
		
	try:
		import pygtk
		pygtk.require(PYGTK_REQUIRED)
		import gtk
	except ImportError, AssertionError: # PyGTK not found or wrong version
		sys.stderr.write("pygtk\n")
		raise SystemExit, "Error: PyGTK %s+ required" % PYGTK_REQUIRED
	
	try:
		from xml import __version__
		if __version__ != PYXML_REQUIRED:
			raise AssertionError
		del(__version__)
	except ImportError, AssertionError: # PyXML not found or wrong version
		sys.stderr.write("pyxml\n")
		raise SystemExit, "Error: PyXML %s required" % PYXML_REQUIRED
	
	try: # If Sabacc is installed system-wide, this finds it automatically.
		from sabacc.front import wndApp
	except ImportError: # Locate the Sabacc package.
		currentdir = os.path.dirname(os.path.abspath(sys.argv[0]))
		basedir = os.path.abspath(os.path.join(currentdir, '..','..'))
		# The package path should be relative to the base directory.
		if os.path.exists(os.path.join(basedir, 'lib', 'python')):
			pythonpath = os.path.join(basedir, 'lib', 'python')
		else:
			pythonpath = basedir
		sys.path.insert(0, pythonpath)  # Place PyBridge package in PYTHONPATH.
		try:
			from sabacc.front import wndApp
		except ImportError:
			raise SystemExit, "Fatal error: could not locate Sabacc installation."
	
	wndApp.window.show()
	gtk.gdk.threads_init()
	gtk.gdk.threads_enter()
	try:
		gtk.main()
	except KeyboardInterrupt:
		pass#sys.exit(1)
	gtk.gdk.threads_leave()
	#sys.exit()
	
if __name__ == "__main__":
	main()
